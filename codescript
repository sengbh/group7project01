#!/bin/bash
#assign a file to $data. Please use $data instead of database.txt. thanks.
data="database.txt"

#Task instructions wrapped in comments
DEBUG=false
if ${DEBUG}; then
	echo Task I and Task II
	echo Design a database with plain .txt doc
	echo Design function and interface
	echo Add functions with an interactive interface to access these functions.
	echo The interface is selected, read input, and get the result of an operations.
	echo The output should be like as follow
	echo Welcome to my contact database, please select in the following menu:
	echo a. Find a record
	echo b. Add a new record
	echo c. Update a record
	echo d. Remove a record
	echo e. Quit
	echo Selection is: 

	echo Task III: Implementation
	echo Implement shell scripts to interact with the database management
fi
echo 
echo "Welcome to my contact database, please select in the following menu:"
echo "------------------------------------------------------------------"

choice="f"

menu="(a) Find a record
(b) Add a new record
(c) Update a record
(d) Remove a record
(e) Quit"

#function to add contact to a database file
addRecord() {
	 echo "------------"
	 echo "Add a record"
	 echo "------------"
	 read -p "Enter a name: " name
	 read -p "Enter an address: " address
	 read -p "Enter a phone number: " phone
	 read -p "Enter an email: " email
	 echo "$name:$address:$phone:$email" >>$data
}

#function to search a contact in a database file
searchRecord() {
	echo "-------------"
	echo "Find a record"
	echo "-------------"
	read -p "Enter a name to search: " name
	echo
	
	if grep -i $name $data
	then
		echo "The contact is found in: " $data
		echo
	else
		echo "The contact is not found in: " $data
		echo
	fi

}

#function to remove a contact from a database
removeRecord() {
	echo "---------------"
	echo "Remove a record"
	echo "---------------"

	read -p "Enter a name to be removed: " name
	echo
	if grep -i $name $data
	then
		grep -v $name $data > deleteData.txt
		echo "$name was removed from the file"
	else
		echo "$name does not exist."
		echo
	fi
}


while [ "$choice" != "e" ]; do

	echo -n "$menu"
	echo
	read -p "> Your selection : " choice

	case $choice in 

		a)searchRecord;;
		A)searchRecord;;

		b)addRecord;;
		B)addRecord;;

		c)updateRecord;;
		C)updateRecord;;

		d)removeRecord;;
		D)removeRecord;;

		e) echo "The program is terminated..."
			exit 1;;
		*)
		echo "Invalid input, please enter (a-e)... "
		echo ;;
		
	esac
done

exit 0


