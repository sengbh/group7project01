#!/bin/bash
#assign a file to $data. Please use $data instead of database.txt. thanks.
data="database.txt"

#Task instructions wrapped in comments
DEBUG=false
if ${DEBUG}; then
	echo Task I and Task II
	echo Design a database with plain .txt doc
	echo Design function and interface
	echo Add functions with an interactive interface to access these functions.
	echo The interface is selected, read input, and get the result of an operations.
	echo The output should be like as follow
	echo Welcome to my contact database, please select in the following menu:
	echo a. Find a record
	echo b. Add a new record
	echo c. Update a record
	echo d. Remove a record
	echo e. Quit
	echo Selection is: 

	echo Task III: Implementation
	echo Implement shell scripts to interact with the database management
fi
echo

#display the menu
echo "Welcome to my contact database, please select in the following menu:"
echo "------------------------------------------------------------------"

choice="f"

menu="(a) Find a record
(b) Add a new record
(c) Update a record
(d) Remove a record
(e) Quit"

#function to add contact to a database file
addRecord() {
	 echo "------------"
	 echo "Add a record"
	 echo "------------"
	 name=""
	 address=""
	 phone=""
	 email=""

	 #set up variables to be empty
	 #grab info from users
	 while [ "$name" = "" ]; do
	 	read -p "Enter a name: " name
	 done
	 while [ "$address" = "" ]; do
	 	read -p "Enter an address: " address
	 done
	 while [ "$phone" = "" ]; do
	 	read -p "Enter a phone number: " phone
	 done
	 while [ "$email" = "" ]; do
	 	read -p "Enter an email: " email
	 done

	 #add all strings together and add it to the record
	 echo "$name:$address:$phone:$email" >>$data
	 echo
}

#function to search a contact in a database file
searchRecord() {
	echo "-------------"
	echo "Find a record"
	echo "-------------"
	name=""
	while [ "$name" = "" ]; do
		read -p "Enter a name to search: " name
	done
	
	if grep -e -iwX "$name" $data
	then
		echo "The contact is found in: " $data
	else
		echo "The contact is not found in: " $data
	fi
	echo
}

#this function updates the data of an entry
updateRecord() {
	echo "---------------"
	echo "Update a record"
	echo "---------------"
	search=""
	while [ "$search" = "" ]; do
		read -p "Enter a name to search: " search
	done
	echo

	if grep -iw "$search" "$data"
	then
		grep -v "$search" $data > file.txt | mv file.txt $data
		name=""
		address=""
		phone=""
		email=""

		#variables made empty to easily check
		#gather info from user
		echo "Name has been found. Starting update process."
		while [ "$name" = "" ]; do
			read -p "Enter a name: " name
		done
		while [ "$address" = "" ]; do
			read -p "Enter an address: " address
		done
		while [ "$phone" = "" ]; do
			read -p "Enter a phone number: " phone
		done
		while [ "$email" = "" ]; do
			read -p "Enter an email: " email
		done
		echo "$name:$address:$phone:$email" >> $data
		echo
	else
		echo "The record is not found"
	fi
	echo
}

#a function to delete a record from a database
deleteRecord () {
	echo "---------------"
	echo "Remove a record"
	echo "---------------"
	delete=""
	while [ "$delete" = "" ]; do
		read -p "Enter a name to delete: " delete
	done

	#search a contact in the database
	if grep -iw "$delete" "$data"
	then	
		#delete a contact if found and move the contact to
		#a new file and back to the original
		grep -vEi "$delete" "$data" > file.txt | mv file.txt "$data"
		echo "The contact is found and $delete was removed from the file"
	else
		echo "$delete does not exist in the file"
	fi
	echo
}

#check to make sure the input is within the asking menu
#link to each fuction accordingly
while [ "$choice" != "e" ]; do

	echo -n "$menu"
	echo
	read -p "> Your selection : " choice

	case $choice in 

		a) searchRecord;;
		A) searchRecord;;

		b) addRecord;;
		B) addRecord;;

		c) updateRecord;;
		C) updateRecord;;

		d) deleteRecord;;
		D) deleteRecord;;

		e) echo "The program is terminated...";;
		E) echo "The Program is terminated..."
		   choice=e;;

		*)
		echo "Invalid input, please enter (a-e)... "
		echo ;;
		
	esac
done

exit 0


